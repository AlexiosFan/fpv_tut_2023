Proof that mul a b terminates on all inputs a and b. 
Apparently we should use induction here. 
A first question: On which variable should we perform the induction, a or b?

Note: from now on, a and b are names whereas m and n are two arbitary constant values.

Base case: mul a b terminates on a = 0 and b arbitrary. 
The result is 0. 
Let b = m. We show "mul 0 b => 0"

Inductive case:
Induction Hypothesis: 
mul a b terminates on a = n and b = m with 
result "mul a b => n * m"
Goal: mul a b terminates on a = (n + 1) and b = m 
with result "mul a b => (n + 1) * m"

What is a new truth that we can use from I.H.?

         n * m => n * m
(I.H.)------------------------------------
         mul a b => n * m

Proof: 


                                         m => m   Tree2
                                (OP)--------------------------------------
                n + 1 => n + 1    m + mul (n + 1 - 1) m => (n + 1) * m
            (PM) -------------------------------------------------------
Tree1 a => n + 1 b => m (match (n + 1) with 0 -> 0 | _ -> n + mul (n - 1) m) => (n + 1) * m                             
(APP')-------------------------------------------------------
                    mul a b => (n + 1) * m

Tree2:=   
  (n + 1) => (n + 1) 1 => 1 (n +' 1 -' 1) => n
(OP)----------------------------
            n + 1 - 1 => n    m => m
(OP)--------------------------------------
          (n + 1 - 1) * m => n * m
(I.H.)---------------------------------
            mul (n + 1 - 1) m => n * m

What is Tree1?
